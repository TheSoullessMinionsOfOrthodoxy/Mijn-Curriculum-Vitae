@page "/CV_View/CV"
@using System.Xml.Linq
@using Mijn_Curriculum_Vitae.CV_View
@using Mijn_Curriculum_Vitae.CV_Edit

<Css />

@*<!----><input placeholder="Accesscode" @bind="Accesscode" />
<button @onclick="Access">Access</button>-->*@

@{
        ////////////////////////////////////////////////////////////////////////////////////////
        // eenmalig xml lezen en object Curriculum opbouwen dat een afspiegeling is van XElement
        ////////////////////////////////////////////////////////////////////////////////////////
        if (teller == 1)
        {
        // Object XMLData wordt aangemaakt en bij constructie wordt
        // de juiste XML file ingelezen en omgezet naar een Curriculum object
        // om te voorkomen dat telkens een nieuw XMLData object wordt aangemaakt als de pagina
        // aangeroepen wordt hebben we de truc met teller bedacht.
        XmlData = new XMLData();
        Curriculum = @XmlData.GetCurriculum();
        teller++;
        }
        /////////////////////////////////////////////////
        /////////////////////////////////////////////////
        ///////////////////////////////////////////////////

        if (@Accesscode == null)
        {
        return;
        }

        /////////////////////////////////////////////////
        // Data in object Curriculum gaat naar HTML
        /////////////////////////////////////////////////
        if (@Accesscode != "jjjjjjjjjjj")
        {
        //////var a = ListOFCV.FirstOrDefault(a => a.Access == Accesscode);

    <div class="flex-container">
        <ViewMenu />
        <CascadingValue Value="@Curriculum">
            <CascadingValue Value="@XmlData">
                <ViewLosseGegevens />
            </CascadingValue>
        </CascadingValue>


        <CascadingValue Value="@Curriculum">
            <CascadingValue Value="@XmlData">
                <ViewVrijetijdsbesteding />
            </CascadingValue>
        </CascadingValue>


        <CascadingValue Value="@Curriculum">
            <CascadingValue Value="@XmlData">
                <ViewWerkervaring />
            </CascadingValue>
        </CascadingValue>

        <CascadingValue Value="@Curriculum">
            <CascadingValue Value="@XmlData">
                <ViewOpleiding />
            </CascadingValue>
        </CascadingValue>

        <CascadingValue Value="@Curriculum">
            <CascadingValue Value="@XmlData">
                <ViewVaardigheden />
            </CascadingValue>
        </CascadingValue>

        <CascadingValue Value="@Curriculum">
            <CascadingValue Value="@XmlData">
                <ViewFunctions />
            </CascadingValue>
        </CascadingValue>

    </div>
    <br />
    <br />
    <br />
    <button @onclick="Save">Save</button>

        }
        /////////////////////////////////////////////////
        /////////////////////////////////////////////////
}

@code
{
    // FIELDS
    XMLData XmlData;
    int teller = 1;
    private string Accesscode = "go";

    public Curriculum Curriculum;

    List<Curriculum> ListOFCV = new List<Curriculum>();

    [CascadingParameter] // zender
    public string choice { get; set; }
    public string sadfasd { get; set; }
    // METHODS
    void Access()
    {
    //@<p>kkkkkkkkkkk</p>
    }

    ////////////////////////////////////////////////////////////////////////////
    // Object Curriculum wordt omgezet naar XML - XML wordt naar file geschreven
    ////////////////////////////////////////////////////////////////////////////
    private void Save()
    {
    XmlData.Save(Curriculum);
    }
    /////////////////////////////////////////////////
    /////////////////////////////////////////////////
}


